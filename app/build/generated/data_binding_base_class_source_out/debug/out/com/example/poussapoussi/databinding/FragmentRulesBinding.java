// Generated by view binder compiler. Do not edit!
package com.example.poussapoussi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.poussapoussi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRulesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button exit;

  @NonNull
  public final TextView gameStart;

  @NonNull
  public final TextView gameStartDetail;

  @NonNull
  public final TextView goal;

  @NonNull
  public final TextView goalDetail;

  @NonNull
  public final ImageView gridBackground;

  @NonNull
  public final Spinner languageSpinner;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView preambule;

  @NonNull
  public final TextView rulesTitle;

  @NonNull
  public final TextView turn;

  @NonNull
  public final TextView turnDetail;

  @NonNull
  public final TextView turnDetailAttention;

  @NonNull
  public final TextView turnDetailAttentionTitle;

  private FragmentRulesBinding(@NonNull ConstraintLayout rootView, @NonNull Button exit,
      @NonNull TextView gameStart, @NonNull TextView gameStartDetail, @NonNull TextView goal,
      @NonNull TextView goalDetail, @NonNull ImageView gridBackground,
      @NonNull Spinner languageSpinner, @NonNull LinearLayout linearLayout,
      @NonNull TextView preambule, @NonNull TextView rulesTitle, @NonNull TextView turn,
      @NonNull TextView turnDetail, @NonNull TextView turnDetailAttention,
      @NonNull TextView turnDetailAttentionTitle) {
    this.rootView = rootView;
    this.exit = exit;
    this.gameStart = gameStart;
    this.gameStartDetail = gameStartDetail;
    this.goal = goal;
    this.goalDetail = goalDetail;
    this.gridBackground = gridBackground;
    this.languageSpinner = languageSpinner;
    this.linearLayout = linearLayout;
    this.preambule = preambule;
    this.rulesTitle = rulesTitle;
    this.turn = turn;
    this.turnDetail = turnDetail;
    this.turnDetailAttention = turnDetailAttention;
    this.turnDetailAttentionTitle = turnDetailAttentionTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRulesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRulesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_rules, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRulesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.exit;
      Button exit = ViewBindings.findChildViewById(rootView, id);
      if (exit == null) {
        break missingId;
      }

      id = R.id.game_start;
      TextView gameStart = ViewBindings.findChildViewById(rootView, id);
      if (gameStart == null) {
        break missingId;
      }

      id = R.id.game_start_detail;
      TextView gameStartDetail = ViewBindings.findChildViewById(rootView, id);
      if (gameStartDetail == null) {
        break missingId;
      }

      id = R.id.goal;
      TextView goal = ViewBindings.findChildViewById(rootView, id);
      if (goal == null) {
        break missingId;
      }

      id = R.id.goal_detail;
      TextView goalDetail = ViewBindings.findChildViewById(rootView, id);
      if (goalDetail == null) {
        break missingId;
      }

      id = R.id.gridBackground;
      ImageView gridBackground = ViewBindings.findChildViewById(rootView, id);
      if (gridBackground == null) {
        break missingId;
      }

      id = R.id.language_spinner;
      Spinner languageSpinner = ViewBindings.findChildViewById(rootView, id);
      if (languageSpinner == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.preambule;
      TextView preambule = ViewBindings.findChildViewById(rootView, id);
      if (preambule == null) {
        break missingId;
      }

      id = R.id.rules_title;
      TextView rulesTitle = ViewBindings.findChildViewById(rootView, id);
      if (rulesTitle == null) {
        break missingId;
      }

      id = R.id.turn;
      TextView turn = ViewBindings.findChildViewById(rootView, id);
      if (turn == null) {
        break missingId;
      }

      id = R.id.turn_detail;
      TextView turnDetail = ViewBindings.findChildViewById(rootView, id);
      if (turnDetail == null) {
        break missingId;
      }

      id = R.id.turn_detail_attention;
      TextView turnDetailAttention = ViewBindings.findChildViewById(rootView, id);
      if (turnDetailAttention == null) {
        break missingId;
      }

      id = R.id.turn_detail_attention_title;
      TextView turnDetailAttentionTitle = ViewBindings.findChildViewById(rootView, id);
      if (turnDetailAttentionTitle == null) {
        break missingId;
      }

      return new FragmentRulesBinding((ConstraintLayout) rootView, exit, gameStart, gameStartDetail,
          goal, goalDetail, gridBackground, languageSpinner, linearLayout, preambule, rulesTitle,
          turn, turnDetail, turnDetailAttention, turnDetailAttentionTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
